#include <iostream>
#include <fstream>
#include <string>
using namespace std;

void insertSort(int* array, int n);
int* logicAnd(int* x, int nx, int* y, int ny);
int* logicOr(int* x, int nx, int* y, int ny);

int main(){
	ifstream in("input.txt");
	ofstream out("output.txt");
	
	int na, nb, nc, i, cntAnd, cntOr;
	int a[100] = {0, }, b[100] = {0, }, c[100] = {0, };
	int* and;
	int* or;
	cntAnd = 0; cntOr = 0;

	//read set a, b, c from file 
	in >> na;
	for(i=0 ; i<na ; i++) in >> a[i];
	in >> nb;
	for(i=0 ; i<nb ; i++) in >> b[i];
	in >> nc;
	for(i=0 ; i<nc ; i++) in >> c[i];
	
	//do insert sort 
	insertSort(a, na);
	insertSort(b, nb);
	insertSort(c, nc);

	//print all element in a set 
	for(i=0 ; i<na ; i++){
		if(a[i] != 0) cout << a[i] << " ";
	}
	cout << endl;

	//print all element in b set
	for(i=0 ; i<nb ; i++){
		if(b[i] != 0) cout << b[i] << " ";
	}
	cout << endl;

	//print all element in c set
	for(i=0 ; i<nc ; i++){
		if(c[i] != 0) cout << c[i] << " ";
	}
	cout << endl;

	//do logical product of a, b set 
	and = logicAnd(a, na, b, nb);

	//count element of result 
	for(i=0 ; i<100 ; i++){
		if(and[i] != 0) cntAnd++;
	}

	//do logical product of (a and b), c set 
	and = logicAnd(and, cntAnd, c, nc);

	//count element and display result of (a and b and c)
	cntAnd = 0;
	for(i=0 ; i<100 ; i++){
		if(and[i] != 0){
			cout << and[i] << " ";
			cntAnd++;
		}
	}
	cout << endl;
	out << cntAnd << endl;

	//do logical sum of a, b set
	or = logicOr(a, na, b, nb);

	//count element of result 
	for(i=0 ; i<200 ; i++){
		if(or[i] != 0) cntOr++;
	}

	//do logical sum of (a or b), c set
	or = logicOr(or, cntOr, c, nc);

	//count element and display result of (a or b or c)
	cntOr = 0;
	for(i=0 ; i<200 ; i++){
		if(or[i] != 0){
			cout << or[i] << " ";
			cntOr++;
		}
	}
	cout << endl;
	out << cntOr << endl;

	return 0;
}
//sort by ascending order 
void insertSort(int* array, int n){
	int i, j, t;
	for(i=1 ; i<n ; i++){
		for(j=i-1 ; j>=0 ; j--){
			if(array[j] > array[j+1]){
				t = array[j];
				array[j] = array[j+1];
				array[j+1] = t;
			}else 
				break;
		}
	}
}
//do logical product of two set 
int* logicAnd(int* x, int nx, int* y, int ny){
	int i, j, cnt;
	int* re = (int*)calloc(100, sizeof(int));
	cnt = 0;
	for(i=0 ; i<nx ; i++){
		for(j=0 ; j<ny ; j++){
			if(x[i] == y[j]) 
				re[cnt++] = x[i];
			else if(x[i] < y[j]) //정렬이 되어 있는 경우 
				break;
		}
	}
	return re;
}
//do logical sum of two set 
int* logicOr(int* x, int nx, int* y, int ny){
	bool f;
	int i, j, cnt;
	int* re = (int*)calloc(200, sizeof(int));
	cnt = 0;
	for(i=0 ; i<ny ; i++) re[cnt++] = y[i];
	for(i=0 ; i<nx ; i++){
		f = 0;
		for(j=0 ; j<ny ; j++){
			if(x[i] == y[j]){
				f = 1;
				break;
			}
		}
		if(f == 0) re[cnt++] = x[i];
	}
	insertSort(re, cnt);
	return re;
}	

// syleeMFCDlg.cpp : implementation file
//

#include "stdafx.h"
#include "syleeMFC.h"
#include "syleeMFCDlg.h"
#include "math.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CAboutDlg dialog used for App About

class CAboutDlg : public CDialog
{
public:
	CAboutDlg();

// Dialog Data
	//{{AFX_DATA(CAboutDlg)
	enum { IDD = IDD_ABOUTBOX };
	//}}AFX_DATA

	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CAboutDlg)
	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	//}}AFX_VIRTUAL

// Implementation
protected:
	//{{AFX_MSG(CAboutDlg)
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD)
{
	//{{AFX_DATA_INIT(CAboutDlg)
	//}}AFX_DATA_INIT
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CAboutDlg)
	//}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialog)
	//{{AFX_MSG_MAP(CAboutDlg)
		// No message handlers
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CSyleeMFCDlg dialog

CSyleeMFCDlg::CSyleeMFCDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CSyleeMFCDlg::IDD, pParent)
{
	//{{AFX_DATA_INIT(CSyleeMFCDlg)
		// NOTE: the ClassWizard will add member initialization here
	//}}AFX_DATA_INIT
	// Note that LoadIcon does not require a subsequent DestroyIcon in Win32
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
}

void CSyleeMFCDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CSyleeMFCDlg)
		// NOTE: the ClassWizard will add DDX and DDV calls here
	//}}AFX_DATA_MAP
}

BEGIN_MESSAGE_MAP(CSyleeMFCDlg, CDialog)
	//{{AFX_MSG_MAP(CSyleeMFCDlg)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_EN_CHANGE(IDC_EDIT1, meet1)
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CSyleeMFCDlg message handlers

BOOL CSyleeMFCDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	// Add "About..." menu item to system menu.

	// IDM_ABOUTBOX must be in the system command range.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		CString strAboutMenu;
		strAboutMenu.LoadString(IDS_ABOUTBOX);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// Set the icon for this dialog.  The framework does this automatically
	//  when the application's main window is not a dialog
	SetIcon(m_hIcon, TRUE);			// Set big icon
	SetIcon(m_hIcon, FALSE);		// Set small icon
	
	// TODO: Add extra initialization here
	
	return TRUE;  // return TRUE  unless you set the focus to a control
}

void CSyleeMFCDlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialog::OnSysCommand(nID, lParam);
	}
}

// If you add a minimize button to your dialog, you will need the code below
//  to draw the icon.  For MFC applications using the document/view model,
//  this is automatically done for you by the framework.

void CSyleeMFCDlg::OnPaint() 
{
	if (IsIconic())
	{
		CPaintDC dc(this); // device context for painting

		SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), 0);

		// Center icon in client rectangle
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// Draw the icon
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CClientDC dc(this);

		struct tm * ptime;
		time_t birth, now;
		double diffsecond;
		int diffday;
		now = time(NULL);

		ptime = localtime(&now);
		ptime->tm_year = 84;
		ptime->tm_mon = 6;
		ptime->tm_mday = 14;
		birth = mktime(ptime);

		diffsecond = difftime(now, birth);
		diffday = diffsecond / 86400;

		RECT temprect;
		GetClientRect(&temprect);
		CPen pen;
		pen.CreatePen(PS_SOLID, 2, RGB(0, 0, 255));
		dc.SelectObject(&pen);

		double r = 1;
		double x, y1, y2, y3;
		double t;
		double pi = 3.14159266;

		int sx = temprect.right - temprect.left;
		int sy = temprect.bottom - temprect.top;

		dc.MoveTo(0, sy/2);
		for(x=0 ; x<=sx ; x++)
			dc.LineTo(x, sy/2);
		
		for(int i=0 ; i<=30; i++){
			x = i * 20 + 15;
			t = i + diffday;

			CPen pen2;
			pen2.CreatePen(PS_SOLID, 5, RGB(0, 255, 0));
			dc.SelectObject(&pen2);
			
			y1 = 100 * sin(2 * pi / 23 * t + pi) + sy/2;
			dc.Ellipse(x-r, y1-r, x+r , y1+r);

			CPen pen3;
		    pen3.CreatePen(PS_SOLID, 5, RGB(255, 0, 0));
			dc.SelectObject(&pen3);
			
			y2 = 100 * sin(2 * pi / 28 * t + pi) + sy/2;
			dc.Ellipse(x-r, y2-r, x+r , y2+r);

			CPen pen4;
			pen4.CreatePen(PS_SOLID, 5, RGB(0, 0, 255));
			dc.SelectObject(&pen4);
			
			y3 = 100 * sin(2 * pi / 33 * t + pi) + sy/2;
			dc.Ellipse(x-r, y3-r, x+r , y3+r);
		}

		CDialog::OnPaint();
		//cout << cnt << endl;
	}
}

// The system calls this to obtain the cursor to display while the user drags
//  the minimized window.
HCURSOR CSyleeMFCDlg::OnQueryDragIcon()
{
	return (HCURSOR) m_hIcon;
}

void CSyleeMFCDlg::meet1() 
{
	// TODO: If this is a RICHEDIT control, the control will not
	// send this notification unless you override the CDialog::OnInitDialog()
	// function and call CRichEditCtrl().SetEventMask()
	// with the ENM_CHANGE flag ORed into the mask.
	
	// TODO: Add your control notification handler code here
	UpdateData(FALSE);
}
